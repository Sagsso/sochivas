{"version":3,"file":"main.js","mappings":"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","sources":["webpack://sochivas/./apps/api/src/app/app.controller.ts","webpack://sochivas/./apps/api/src/app/app.module.ts","webpack://sochivas/./apps/api/src/app/app.service.ts","webpack://sochivas/./apps/api/src/auth/auth.controller.ts","webpack://sochivas/./apps/api/src/auth/auth.module.ts","webpack://sochivas/./apps/api/src/auth/auth.service.ts","webpack://sochivas/./apps/api/src/auth/dto/create-auth.dto.ts","webpack://sochivas/./apps/api/src/auth/dto/update-auth.dto.ts","webpack://sochivas/./apps/api/src/auth/entities/auth.entity.ts","webpack://sochivas/./apps/api/src/user/dto/create-user.dto.ts","webpack://sochivas/./apps/api/src/user/dto/update-user.dto.ts","webpack://sochivas/./apps/api/src/user/entities/user.entity.ts","webpack://sochivas/./apps/api/src/user/user.controller.ts","webpack://sochivas/./apps/api/src/user/user.module.ts","webpack://sochivas/./apps/api/src/user/user.service.ts","webpack://sochivas/external commonjs \"@nestjs/common\"","webpack://sochivas/external commonjs \"@nestjs/core\"","webpack://sochivas/external commonjs \"@nestjs/mapped-types\"","webpack://sochivas/external commonjs \"@nestjs/typeorm\"","webpack://sochivas/external commonjs \"bcrypt\"","webpack://sochivas/external commonjs \"reflect-metadata\"","webpack://sochivas/external commonjs \"tslib\"","webpack://sochivas/external commonjs \"typeorm\"","webpack://sochivas/webpack/bootstrap","webpack://sochivas/./apps/api/src/main.ts"],"sourcesContent":["import { Controller, Get } from '@nestjs/common';\n\n\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get('hello')\n  getData() {\n    return this.appService.getData();\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { UserModule } from 'src/user/user.module';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: 'localhost',\n      port: 3306,\n      username: 'root',\n      password: 'admin',\n      database: 'sochivas',\n      entities: [\n        __dirname + '/**/*.entity{.ts,.js}'\n     ],\n      synchronize: true,\n      keepConnectionAlive: true, \n      autoLoadEntities: true,\n      \n    }),\n    UserModule,\n    AuthModule\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData() {\n    return { message: 'Welcome to api!' };\n  }\n}\n","import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { CreateAuthDto } from './dto/create-auth.dto';\nimport { UpdateAuthDto } from './dto/update-auth.dto';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  create(@Body() createAuthDto: CreateAuthDto) {\n    return this.authService.create(createAuthDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.authService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.authService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateAuthDto: UpdateAuthDto) {\n    return this.authService.update(+id, updateAuthDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.authService.remove(+id);\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Auth } from './entities/auth.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Auth])],\n  controllers: [AuthController],\n  providers: [AuthService],\n})\nexport class AuthModule {}\n","import { Injectable } from '@nestjs/common';\nimport { CreateAuthDto } from './dto/create-auth.dto';\nimport { UpdateAuthDto } from './dto/update-auth.dto';\n\n@Injectable()\nexport class AuthService {\n  create(createAuthDto: CreateAuthDto) {\n    return 'This action adds a new auth';\n  }\n\n  findAll() {\n    return `This action returns all auth`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} auth`;\n  }\n\n  update(id: number, updateAuthDto: UpdateAuthDto) {\n    return `This action updates a #${id} auth`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} auth`;\n  }\n}\n","export class CreateAuthDto {}\n","import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAuthDto } from './create-auth.dto';\n\nexport class UpdateAuthDto extends PartialType(CreateAuthDto) {}\n","export class Auth {}\n","export class CreateUserDto {\n    readonly full_name: string;\n    readonly email: string;\n    readonly password: string;\n    readonly profile_type: string;\n    readonly contact_type: string;\n}\n","import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n","import { Column, Entity, JoinColumn, JoinTable, ManyToMany, OneToOne, PrimaryGeneratedColumn } from \"typeorm\";\r\nimport * as bcrypt from 'bcrypt';\r\n\r\n@Entity()\r\nexport class User {\r\n\r\n    @PrimaryGeneratedColumn()\r\n    id: number;\r\n    \r\n    @Column()\r\n    full_name: string;\r\n\r\n    @Column()\r\n    email: string;\r\n\r\n    @Column()\r\n    password: string;\r\n\r\n    @Column({default: false})\r\n    is_active: boolean;\r\n\r\n    @Column({default: null})\r\n    profile_type: string;\r\n\r\n    @Column({default: null})\r\n    contact_type: string;\r\n\r\n    @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP'})\r\n    last_login: Date;\r\n\r\n    hashPassword() {\r\n        this.password = bcrypt.hashSync(this.password, 8);\r\n    }\r\n\r\n    checkIfUnencryptedPasswordIsValid(unencryptedPassword: string) {\r\n        try {\r\n            return bcrypt.compareSync(unencryptedPassword, this.password);\r\n        } catch (error) {\r\n            console.log(error)\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  HttpStatus,\n  Res,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Controller('users')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post()\n  async create(@Res() res, @Body() createUserDto: CreateUserDto) {\n    const user = await this.userService.create(createUserDto);\n    return res.status(HttpStatus.OK).json({ data: user, msg: 'User created.' });\n  }\n\n  @Get()\n  async findAll(@Res() res) {\n    const users =  await this.userService.findAll();\n    return res.status(HttpStatus.OK).json({ data: users, msg: 'Users list' });\n\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.userService.remove(+id);\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n","import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\n\nimport {transporter} from './../middlewares/mailer';\n\n@Injectable()\nexport class UserService {\n\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository<User>,\n  ) {\n    \n\n  }\n  async create(createUserDto: CreateUserDto) {\n    try {\n      \n      const newUser = new User();\n      newUser.full_name = createUserDto.full_name;\n      newUser.email = createUserDto.email;\n      newUser.password = createUserDto.password;\n      newUser.profile_type = createUserDto.profile_type;\n      newUser.contact_type = createUserDto.contact_type;\n\n      newUser.hashPassword();\n\n      await this.userRepository.save(newUser);\n      \n      delete newUser.password;\n      \n        // send mail with defined transport object\n    // let info = await transporter.sendMail({\n    //   from: '\"Sochivas 👻\" <cursoswebpedago@gmail.com>', // sender address\n    //   to: \"santiagogalvez17@gmail.com\", // list of receivers\n    //   subject: \"Bienvenido al Curso de Sochivas\", // Subject line\n    //   text: \"Hello world?\", // plain text body\n    //   html: \"<b>Hello world?</b>\", // html body\n    // });\n\n      return newUser;\n    } catch (error) {\n      console.log(error)\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\n    }\n\n  }\n\n  async findAll() {\n    try {\n      const users =  await this.userRepository.find();\n      users.map(u => {delete u.password});\n      return users;\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} user`;\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return `This action updates a #${id} user`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/mapped-types\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"bcrypt\");","module.exports = require(\"reflect-metadata\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\nimport \"reflect-metadata\";\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3333;\n  await app.listen(port);\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}